events {
    worker_connections 1024;
}

http {
    # Upstream definitions for each service
    upstream user-service {
        server user-service:3010;
        # Add more instances for load balancing:
        # server user-service-2:3010;
        # server user-service-3:3010;
    }

    upstream payment-service {
        server payment-service:3011;
    }

    upstream order-service {
        server order-service:3012;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name localhost;

        # Global health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Service status page
        location /status {
            access_log off;
            return 200 '{"status":"healthy","services":["user-service","payment-service","order-service"],"nginx":"1.0.0"}';
            add_header Content-Type application/json;
        }

        # Route to User Service
        location /users {
            proxy_pass http://user-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check for upstream
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }

        # Route to Payment Service
        location /payments {
            proxy_pass http://payment-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }

        # Route to Order Service
        location /orders {
            proxy_pass http://order-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }

        # Default route - API Gateway info
        location / {
            return 200 '{"message":"Moro Microservices API Gateway","version":"1.0.0","services":{"users":"http://localhost:3000/users","payments":"http://localhost:3000/payments","orders":"http://localhost:3000/orders"},"health":"http://localhost:3000/health"}';
            add_header Content-Type application/json;
        }

        # Enable gzip compression
        gzip on;
        gzip_types
            text/plain
            text/css
            text/js
            text/xml
            text/javascript
            application/javascript
            application/json
            application/xml+rss;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self'" always;
    }

    # Load balancing and health checks
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
} 