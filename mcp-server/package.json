{
  "name": "mcp-server-example",
  "version": "1.0.0",
  "private": true,
  "description": "Model Context Protocol (MCP) server built with MoroJS - demonstrating AI agent integration",
  "main": "src/server.ts",
  "bin": {
    "mcp-server": "./dist/server.js"
  },
  "scripts": {
    "dev": "NODE_ENV=development ts-node src/server.ts",
    "dev:watch": "NODE_ENV=development ts-node-dev --respawn --transpile-only src/server.ts",
    "build": "tsc && chmod +x dist/server.js",
    "start": "NODE_ENV=production node dist/server.js",
    "test": "echo \"Tests coming soon\"",
    "test:mcp": "npx @modelcontextprotocol/inspector node dist/server.js",
    "switch:local": "rm -rf node_modules package-lock.json && npm install file:../../MoroJS",
    "switch:npm": "rm -rf node_modules package-lock.json && npm install @morojs/moro@latest"
  },
  "dependencies": {
    "@morojs/moro": "file:../../MoroJS",
    "@modelcontextprotocol/sdk": "^1.8.0",
    "zod": "^3.24.2",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "@types/uuid": "^9.0.0",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.3.2"
  },
  "keywords": [
    "moro",
    "mcp",
    "model-context-protocol",
    "ai",
    "llm",
    "agent",
    "tools",
    "example"
  ]
} 